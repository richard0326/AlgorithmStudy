#include <iostream>
#include <time.h>
using namespace std;

#define ARR_SIZE 20
int arr[ARR_SIZE];

void printArr(int left, int right)
{
	for (int i = 0; i < ARR_SIZE; i++)
	{
		if (i == left || i == right)
		{
			printf("[%2d]", arr[i]);
		}
		else
		{
			printf(" %2d,", arr[i]);
		}
	}
	printf("\n");
}

void quick_sort(int left, int right)
{

	int pivot = left;
	int l = left + 1;
	int r = right;

	if (r < l)
	{
		return;
	}

	printf("pivot : %d, l : %d, r : %d\n", pivot, l, r);
	printArr(-1, -1);

	if (r == l)
	{
		if (arr[pivot] > arr[r])
		{
			int tmp = arr[pivot];
			arr[pivot] = arr[r];
			arr[r] = tmp;
		}
		printArr(l, r);
		printf("\n\n");
		return;
	}

	while (1)
	{
		while (1)
		{
			if (l >= r || arr[pivot] < arr[l])
			{
				break;
			}
			l++;
		}

		while (1)
		{
			if (r < l || arr[pivot] > arr[r])
			{
				break;
			}
			r--;
		}

		if (l >= r)
		{
			int tmp = arr[r];
			arr[r] = arr[pivot];
			arr[pivot] = tmp;
			break;
		}

		int tmp = arr[l];
		arr[l] = arr[r];
		arr[r] = tmp;
		printArr(l, r);
	}

	printArr(l, r);
	printf("\n\n");

	quick_sort(left, r-1);
	quick_sort(r+1, right);
}

int main()
{
	srand(time(NULL));
	
	for (int i = 0; i < ARR_SIZE; i++)
		arr[i] = i;

	for (int i = 0; i < ARR_SIZE; i++)
	{
		int t1 = rand() % 20;
		int t2 = rand() % 20;

		int tmp = arr[t1];
		arr[t1] = arr[t2];
		arr[t2] = tmp;
	}

	quick_sort(0, ARR_SIZE-1);

	printArr(-1, -1);
	return 0;
}
