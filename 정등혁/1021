#include <iostream>
#include <deque>
using namespace std;

deque<int> a;
int index[50];
int nowIndex = 0;

bool findShortDir()
{
	int r = 0;
	while (true)
	{
		if (a[r] == index[nowIndex])
		{
			break;
		}
		r++;
	}

	int l = 0;
	int lCount = 0;
	while (true)
	{
		if (a[l] == index[nowIndex])
		{
			break;
		}
		l--;
		lCount++;
		if (l < 0)
		{
			l = a.size() - 1;
		}
	}

	return (r < lCount);
}

int main()
{
	int n, m;
	cin >> n >> m;

	for (int i = 0; i < n; i++)
	{
		a.push_back(i + 1);
	}

	for (int i = 0; i < m; i++)
	{
		cin >> index[i];
	}

	int sum = 0;

	while (nowIndex != m)
	{
		if (a.front() == index[nowIndex])
		{
			nowIndex++;
			a.pop_front();
			continue;
		}

		if (findShortDir())
		{
			//right
			while (!(a.front() == index[nowIndex]))
			{
				a.push_back(a.front());
				a.pop_front();
				sum++;
			}

			nowIndex++;
			a.pop_front();
			continue;
		}
		else
		{
			//left
			while (!(a.front() == index[nowIndex]))
			{
				a.push_front(a.back());
				a.pop_back();
				sum++;
			}

			nowIndex++;
			a.pop_front();
		}
	}

	printf("%d\n", sum);

	return 0;
}
