#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <queue>
using namespace std;

// r행, c열, t초
int r, c, t;
int map[51][51];
int sidemap[51][51];

int topX;
int topY;
int botX;
int botY;

queue<pair<int, int>> q;

int fx[4] = { 1, -1, 0, 0 };
int fy[4] = { 0, 0, 1, -1 };

int main() {

	scanf("%d %d %d", &r, &c, &t);

	for (int j = 1; j <= r; j++)
	{
		for (int i = 1; i <= c; i++)
		{
			scanf("%d", &map[j][i]);

			if (map[j][i] == -1)
			{
				if (topX == 0 && topY == 0)
				{
					topX = j;
					topY = i;
				}
				else
				{
					botX = j;
					botY = i;
				}
			}
			else if (map[j][i] != 0)
			{
				q.push(make_pair(j, i));
			}
		}
	}

	while (t--)
	{
		while (!q.empty())
		{
			int x = q.front().first;
			int y = q.front().second;
			q.pop();

			int before = map[x][y];
			int after = before / 5;

			int countAround = 0;
			for (int i = 0; i < 4; i++)
			{
				int tx = x + fx[i];
				int ty = y + fy[i];

				if (0 < tx && tx <= r && 0 < ty && ty <= c && map[tx][ty] != -1)
				{
					countAround++;
				}
			}

			if (countAround == 0)
			{
				continue;
			}

			sidemap[x][y] -= after * countAround;

			for (int i = 0; i < 4; i++)
			{
				int tx = x + fx[i];
				int ty = y + fy[i];

				if (0 < tx && tx <= r && 0 < ty && ty <= c && map[tx][ty] != -1)
				{
					sidemap[tx][ty] += after;
				}
			}
		}

		for (int j = 1; j <= r; j++)
		{
			for (int i = 1; i <= c; i++)
			{
				map[j][i] += sidemap[j][i];
				sidemap[j][i] = map[j][i];
			}
		}

		sidemap[topX][2] = 0;
		sidemap[botX][2] = 0;
		for (int i = 2; i < c; i++)
		{		
			sidemap[topX][i + 1] = map[topX][i];
			sidemap[botX][i + 1] = map[botX][i];
			sidemap[1][i] = map[1][i+1];
			sidemap[r][i] = map[r][i+1];
		}
		
		for (int i = topX-1; i > 0; i--)
		{
			sidemap[i][1] = map[i - 1][1];
			sidemap[i][c] = map[i + 1][c];
		}

		for (int i = botX + 1; i <= r; i++)
		{
			if (i + 1 <= r) {
				sidemap[i][1] = map[i + 1][1];
			}
			sidemap[i][c] = map[i - 1][c];
		}

		sidemap[1][1] = map[1][2];
		sidemap[r][1] = map[r][2];

		// 주워서 큐에 넣는거
		for (int j = 1; j <= r; j++) {
			for (int i = 1; i <= c; i++) {
				if (sidemap[j][i] != 0 && sidemap[j][i] != -1) {
					q.push(make_pair(j, i));
				}
				map[j][i] = sidemap[j][i];
				sidemap[j][i] = 0;
			}
		}
	}

	int count = 0;
	for (int j = 1; j <= r; j++) {
		for (int i = 1; i <= c; i++) {
			if (map[j][i] != 0 && map[j][i] != -1) {
				count += map[j][i];
			}
		}
	}

	printf("%d\n", count);

	return 0;
}
